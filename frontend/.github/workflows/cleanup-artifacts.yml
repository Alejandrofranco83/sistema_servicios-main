name: Cleanup Old Artifacts

on:
  schedule:
    # Ejecutar todos los días a las 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:  # Permite ejecutar manualmente

jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
    
    steps:
    - name: Cleanup old artifacts
      uses: actions/github-script@v7
      with:
        script: |
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          
          // Obtener todos los artefactos
          const artifacts = await github.rest.actions.listArtifactsForRepo({
            owner: owner,
            repo: repo,
            per_page: 100
          });
          
          console.log(`Found ${artifacts.data.artifacts.length} artifacts`);
          
          // Calcular fecha límite (7 días atrás)
          const cutoffDate = new Date();
          cutoffDate.setDate(cutoffDate.getDate() - 7);
          
          let deletedCount = 0;
          let freedSpace = 0;
          
          for (const artifact of artifacts.data.artifacts) {
            const createdAt = new Date(artifact.created_at);
            
            if (createdAt < cutoffDate) {
              console.log(`Deleting artifact: ${artifact.name} (${artifact.size_in_bytes} bytes, created: ${artifact.created_at})`);
              
              try {
                await github.rest.actions.deleteArtifact({
                  owner: owner,
                  repo: repo,
                  artifact_id: artifact.id
                });
                deletedCount++;
                freedSpace += artifact.size_in_bytes;
              } catch (error) {
                console.error(`Failed to delete artifact ${artifact.name}:`, error.message);
              }
            }
          }
          
          const freedSpaceMB = (freedSpace / (1024 * 1024)).toFixed(2);
          console.log(`\nCleanup completed:`);
          console.log(`- Deleted artifacts: ${deletedCount}`);
          console.log(`- Freed space: ${freedSpaceMB} MB`);
          
          // Crear un resumen
          core.summary
            .addHeading('Artifact Cleanup Results')
            .addTable([
              [{data: 'Metric', header: true}, {data: 'Value', header: true}],
              ['Artifacts deleted', deletedCount.toString()],
              ['Space freed', `${freedSpaceMB} MB`],
              ['Cutoff date', cutoffDate.toISOString()]
            ])
            .write(); 